using namespace std;

class Fecha
{
    public:
        Fecha();
        Fecha(int dd, int mm, int aa);

        void setdd(int dd);
        void setmm(int mm);
        void setaa(int aa);

        int getdd();
        int getmm();
        int getaa();

        void setFecha(int dd, int mm, int aa);

        Fecha operator+(int dias);
        friend bool operator>=(Fecha F1,Fecha F2);
        friend bool operator<=(Fecha F1,Fecha F2);
        friend bool operator>(Fecha F1,Fecha F2);
        friend bool operator<(Fecha F1,Fecha F2);
        friend bool operator==(Fecha F1,Fecha F2);
        friend istream& operator>>(istream &is, Fecha &F1);
        friend istream& operator<<(istream &is, Fecha &F1);

        bool VerificaFecha();
        int DiasTotales();

    private:
        int dd,mm,aa;
};

Fecha::Fecha()
{
    this->dd=1;
    this->mm=1;
    this->aa=1;
}
Fecha::Fecha(int dd, int mm, int aa)
{
    this->dd=dd;
    this->mm=mm;
    this->aa=aa;
}

void Fecha::setdd(int dd)
{
    this->dd=dd;
}
void Fecha::setmm(int mm)
{
    this->mm=mm;
}
void Fecha::setaa(int aa)
{
    this->aa=aa;
}

int Fecha::getdd()
{
    return this->dd;
}
int Fecha::getmm()
{
    return this->mm;
}
int Fecha::getaa()
{
    return this->aa;
}

void Fecha::setFecha(int dd, int mm, int aa)
{
    this->dd=dd;
    this->mm=mm;
    this->aa=aa;
}

int Fecha::DiasTotales()
{
    int diasAA, diasMM, diasTotales;
    diasAA=this->aa*365;

    switch (this->mm)
    {
    case 1:
        diasMM=0;
        break;
    case 2:
        diasMM=31;
        break;
    case 3:
        diasMM=59;
        break;
    case 4:
        diasMM=90;
        break;
    case 5:
        diasMM=120;
        break;
    case 6:
        diasMM=151;
        break;
    case 7:
        diasMM=181;
        break;
    case 8:
        diasMM=212;
        break;
    case 9:
        diasMM=243;
        break;
    case 10:
        diasMM=273;
        break;
    case 11:
        diasMM=304;
        break;
    case 12:
        diasMM=334;
        break;
    }

    diasTotales=diasAA+diasMM+this->dd;

    return diasTotales;
}

bool Fecha::VerificaFecha()
{
    if ((this->aa<=0)||(this->mm<=0)||(this->mm>12)||(this->dd<=0))
        return false;

    switch (this->mm)
    {
    case 1:
    case 3:
    case 5:
    case 7:
    case 8:
    case 10:
    case 12:
        if (this->dd>31)
            return false;
        break;
    case 4:
    case 6:
    case 9:
    case 11:
        if (this->dd>30)
            return false;
        break;
    case 2:
        if (this->dd>28)
            return false;
        break;
    }
    return true;
}


Fecha Fecha::operator+(int dias)
{
    Fecha fechamas;
    fechamas.setFecha(this->dd+dias,this->mm,this->aa);
    while(VerificaFecha()==false)
    {
        switch (fechamas.mm)
        {
        case 1:
        case 3:
        case 5:
        case 7:
        case 8:
        case 10:
        case 12:
            if (fechamas.dd>31)
                {
                    fechamas.mm=+1;
                    fechamas.dd=-31;
                }
            break;
        case 4:
        case 6:
        case 9:
        case 11:
            if (fechamas.dd>30)
                {
                    fechamas.mm=+1;
                    fechamas.dd=-30;
                }
            break;
        case 2:
            if (fechamas.dd>28)
                {
                    fechamas.mm=+1;
                    fechamas.dd=-28;
                }
            break;
        }
        if(fechamas.mm>12)
            {
                fechamas.mm=1;
                fechamas.aa=+1;
            }
    }
    return fechamas;
}

bool operator>=(Fecha F1,Fecha F2)
{
    int diast1=F1.DiasTotales();
    int diast2=F2.DiasTotales();

    if (diast1>=diast2)
        return true;
    else
        return false;
}
bool operator<=(Fecha F1,Fecha F2)
{
    int diast1=F1.DiasTotales();
    int diast2=F2.DiasTotales();

    if (diast1<=diast2)
        return true;
    else
        return false;
}
bool operator>(Fecha F1,Fecha F2)
{
    int diast1=F1.DiasTotales();
    int diast2=F2.DiasTotales();

    if (diast1>diast2)
        return true;
    else
        return false;
}
bool operator<(Fecha F1,Fecha F2)
{
    int diast1=F1.DiasTotales();
    int diast2=F2.DiasTotales();

    if (diast1<diast2)
        return true;
    else
        return false;
}
bool operator==(Fecha F1,Fecha F2)
{
    int diast1=F1.DiasTotales();
    int diast2=F2.DiasTotales();

    if (diast1==diast2)
        return true;
    else
        return false;
}

istream& operator>>(istream &is, Fecha &F1)
{
    is>>F1.dd;
    is>>F1.mm;
    is>>F1.aa;
    return is;
}

ostream& operator<<(ostream &os, Fecha F1)
{
    os<<F1.getdd()<<"/";
    os<<F1.getmm()<<"/";
    os<<F1.getaa();
    return os;
}
