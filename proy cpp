#include <iostream>
#include <fstream>
#include <stdio.h>

using namespace std;

#include "Material.h"
#include "Libro.h"
#include "Disco.h"
#include "Software.h"
#include "Fecha.h"
#include "Reserva.h"


void menu(){
    cout << "Menu" << endl;
    cout << "a. Consultar la lista de Materiales" << endl;
    cout << "b. Consultar la lista de Reservaciones" << endl;
    cout << "c. Consultar las reservaciones de un material dado" << endl;
    cout << "d. Consultar las reservaciones de una fecha dada" << endl;
    cout << "e. Hacer una reservacion" << endl;
    cout << "f. Terminar" << endl;
    cout << "Ingresa la opcion: ";
}

int main()
{

    Reserva Reservaciones[50];
    Material *Material[20];
    int cont = 0, id, iaux; //necesarios pra ingresar los datos de Material
    string titulo, saux; //necesarios pra ingresar los datos de Material
    char opcion='g', clave; //necesarios pra ingresar los datos de Material
    bool baux = false;
    Fecha FechaDada(0,0,0);

    //Carga Reserva
    ifstream ArchivoReserva;
    ArchivoReserva.open("Reserva.txt");

    ofstream ArchivoReservaO;

    //Carga Material
    ifstream ArchivoMaterial;
    ArchivoMaterial.open("Material.txt");

    //Crea el areglo de apuntadores a objetos de tipo material e hijos
    while (!ArchivoMaterial.eof()){
        ArchivoMaterial>>id>>titulo>>clave;
        switch (clave){
        case 'L':
            ArchivoMaterial>>iaux>>saux;
            Material[cont] = new Libro(id, titulo, iaux, saux);
            break;
        case 'D':
            ArchivoMaterial>>iaux;
            Material[cont] = new Disco(id, titulo, iaux);
            break;
        case 'S':
            ArchivoMaterial>>saux;
            Material[cont] = new Software(id, titulo, saux);
            break;
        }
        cont++;
    }
    //Para saber el numero de reservas y no desplegar reservas de mas
    int iReservas=0;
    //Lee el archivo reserva y se mandan los datos al arreglo de reservaciones
    for (int c=0; (c<50)&&(!ArchivoReserva.eof()); c++,iReservas++){
        int dd = 1, mm = 1, aa = 1999, idMaterial =-1, idCliente=-1;
        ArchivoReserva >> dd >> mm >> aa >> idMaterial >> idCliente;
        Fecha FechaReserva(dd,mm,aa);
        Reservaciones[c].setfechaReservacion(FechaReserva);
        Reservaciones[c].setidMaterial(idMaterial);
        Reservaciones[c].setidCliente(idCliente);
    }

    ArchivoReserva.close();
    ArchivoMaterial.close();

    remove("Reserva.txt");

    ArchivoReservaO.open("Reserva.txt");

    while (tolower(opcion)!='f'){
        menu();
        cin >> opcion;
        cout << endl;
        switch (tolower(opcion)){
        case 'a':
            for(int ix = 0; ix < 20; ix++){
                Material[ix]->muestra();
                cout<<"\n";
            }
        break;

        case 'b':
            for (int c=0;c<iReservas+1;c=c+1){
                for(int r=0; r<=cont; r=r+1){
                    if ((Reservaciones[c].getidMaterial()==Material[r]->getidMaterial())&&(Reservaciones[c].getidMaterial()!=0)){
                        cout << Material[r]->getTitulo() << " " << Reservaciones[c].getidCliente() << " " << Reservaciones[c].getfechaReservacion() << " " << Reservaciones[c].calculaFechaFinReserva(Material[r]->cantidadDiasPrestamo()) << endl;
                    }
                }
            }
            break;

        case 'c':
            baux = false;
            while(!baux){
                cout<<"Ingresa el id del Material: ";
                cin >> iaux;

                for (int ix = 0; ix <= cont; ix++){
                    if (Material[ix]->getidMaterial() == iaux)
                        baux = true;
                }

                if (!baux)
                    cout<<"\n El id no existe, asegurate de ingresar un id existente\n";
            }

            for (int ix = 0; ix < iReservas+1; ix++){
                if (iaux == Reservaciones[ix].getidMaterial()){
                    Fecha fechaRes = Reservaciones[ix].getfechaReservacion();
                    for (int iy = 0; iy <= cont; iy++){
                        if (iaux == Material[iy]->getidMaterial()){
                            cout<<"\nTitulo: "<<Material[iy]->getTitulo()<<"\nFecha de inicio: "<<fechaRes<<"\nFecha de entrega: "<<fechaRes+Material[iy]->cantidadDiasPrestamo();
                        }
                    }
                }
            }

            break;

        case 'd':
            while (FechaDada.VerificaFecha()==false){
                cout << "Ingresa una fecha: ";
                cin >> FechaDada;
                cout << endl;
            }
            for (int c=0;c<iReservas+1;c++){
                for(int r=0; r<=cont; r++){
                    if (Reservaciones[c].getidMaterial()==Material[r]->getidMaterial()){
                        if ((FechaDada>=Reservaciones[c].getfechaReservacion())&&(FechaDada<=Reservaciones[c].calculaFechaFinReserva(Material[r]->cantidadDiasPrestamo()))){
                            cout << Material[r]->getTitulo() << " " << Reservaciones[c].getidCliente() << endl;
                        }
                    }
                }
            }
            break;

        case 'e':
            id=0;
            baux = false;
            cout << "Ingresa la id del cliente: ";
            cin >> id;
            while(!baux){
                cout<<"Ingresa el id del Material: ";
                cin >> iaux;
                    for (int ix = 0; ix <= cont; ix++){
                        if (Material[ix]->getidMaterial() == iaux)
                            baux = true;
                        }
                        if (!baux)
                            cout<<"\n El id no existe, asegurate de ingresar un id existente\n";
            }
            while (FechaDada.VerificaFecha()==false){
                cout << "Ingresa una fecha: ";
                cin >> FechaDada;
                cout << endl;
            }
            for (int c=0;c<iReservas+1;c=c+1){
                for(int r=0; r<=cont; r=r+1){
                    if (Reservaciones[c].getidMaterial()==Material[r]->getidMaterial()){
                        while((FechaDada>Reservaciones[c].getfechaReservacion())&&(FechaDada<Reservaciones[c].calculaFechaFinReserva(Material[r]->cantidadDiasPrestamo()))){
                            cout << "Ingresa una fecha: ";
                            cin >> FechaDada;
                            cout << endl;
                        }
                    }
                }
            }
            iReservas=iReservas+1;
            Reservaciones[iReservas].setidCliente(id);
            Reservaciones[iReservas].setidMaterial(iaux);
            Reservaciones[iReservas].setfechaReservacion(FechaDada);

            break;

        case 'f':
            for (int ix = 0; ix < iReservas+1; ix++){
                FechaDada = Reservaciones[ix].getfechaReservacion();
                if(Reservaciones[ix].getidMaterial()!=-1)
                    ArchivoReservaO<<FechaDada.getdd()<<" "<<FechaDada.getmm()<<" "<<FechaDada.getaa()<<" "<<Reservaciones[ix].getidMaterial()<<" "<<Reservaciones[ix].getidCliente()<<endl;
            }

            ArchivoReservaO.close();
            break;

        default:
            cout << "\nError, opcion incorrecta" << endl << endl;
        }
    }
return 0;
}
